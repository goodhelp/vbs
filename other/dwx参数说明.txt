i=  定义函数参数的类型 
r=  指定函数返回值的类型 无论函数是否有返回内容，都可以忽略此参数
f=  指定函数调用方式 t表示函数调用约定为 this call 而l表示必须在调用注册函数后立即调用GetLastError t标志仅用于32位版本 64位版本忽略

参数区分大小写 i r f必须为小写 输入和返回参数为小写，输出参数为大写

输入参数和返回值的类型

m ― 有符号64位整数 ― INT64, LONGLONG, ...
q ― 无符号64位整数 ― UINT64, ULONGLONG, ...
l ― 有符号32位整数 ― LONG, INT, BOOL, ...
u ― 无符号32位整数 ― ULONG, UINT, DWORD, ...
h ― 句柄 ― HANDLE, HWND, HMODULE, HINSTANCE, HICON, ... ― 32-bit (x86) or 64-bit (x64) integer.
p ― 指针 pointer; 对于数字，它与u（x86）或q（x64）相同，但也可用于传递对象（IDispatch*）或字符串
    for numbers it is the same as u (x86) or q (x64) but can also be used to pass an object (IDispatch *) or a string.
n ― 有符号16位整数 ― SHORT
t ― 无符号16位整数 ― USHORT, WORD, WCHAR, OLECHAR, ...
c ― 有符号8位整数 ― CHAR
b ― 无符号8位整数 ― UCHAR, BYTE, ...
f ― 单精度浮点数

 (32 bits) ― FLOAT
d ― 双精度浮点数 (64 bits) ― DOUBLE
w ― Unicode字符串 ― BSTR, LPWSTR, LPOLESTR, OLECHAR *, WCHAR *, ...
s ― ANSI/Windows字符串（默认代码） ― LPSTR, LPCSTR, CHAR *, ...
z ― OEM/DOS 字符串 (default codepage) ― LPSTR, LPCSTR, CHAR *, ...
v ― 指向变体结构的指针。

pointer to a VARIANT structure.

输出参数类型

M ― pointer to the specified number (its address in memory) ― LONGLONG *, PLONGLONG, ...
Q ― same as above ― ULONGLONG *, PULONGLONG, ...
L ― same as above ― LONG *, LPLONG, ...
H ― same as above ― HANDLE *, PHANDLE, LPHANDLE, ...
U ― same as above ― ULONG *, LPDWORD, ...
P ― same as above
N ― same as above ― SHORT *
T ― same as above ― USHORT *, LPWORD, WCHAR *, OLECHAR *, ...
C ― same as above ― CHAR *, ...
B ― same as above ― UCHAR *, LPBYTE, ...
F ― same as above ― FLOAT *, PFLOAT
D ― same as above ― DOUBLE *, PDOUBLE
W ― output Unicode string
S ― output ANSI string
Z ― output OEM string

